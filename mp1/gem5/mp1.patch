diff --git a/configs/common/CacheConfig.py b/configs/common/CacheConfig.py
index 4f21a43924..b1d0fcea34 100644
--- a/configs/common/CacheConfig.py
+++ b/configs/common/CacheConfig.py
@@ -110,10 +110,11 @@ def config_cache(options, system):
             None,
         )
     else:
-        dcache_class, icache_class, l2_cache_class, walk_cache_class = (
+        dcache_class, icache_class, l2_cache_class, l3_cache_class, walk_cache_class = (
             L1_DCache,
             L1_ICache,
             L2Cache,
+            L3Cache,
             None,
         )
 
@@ -127,10 +128,19 @@ def config_cache(options, system):
     if options.l2cache and options.elastic_trace_en:
         fatal("When elastic trace is enabled, do not configure L2 caches.")
 
-    if options.l2cache:
+    if options.l3cache:
+        # instantiate last level l3 cache
+        system.l3 = l3_cache_class(
+            clk_domain=system.cpu_clk_domain, **_get_cache_opts("l3", options)
+        )
+        system.tol3bus = L2XBar(clk_domain=system.cpu_clk_domain)
+        system.l3.cpu_side = system.tol3bus.mem_side_ports
+        system.l3.mem_side = system.membus.cpu_side_ports
+    elif options.l2cache:
         # Provide a clock for the L2 and the L1-to-L2 bus here as they
         # are not connected using addTwoLevelCacheHierarchy. Use the
         # same clock as the CPUs.
+        # instantiate last level l2 cache
         system.l2 = l2_cache_class(
             clk_domain=system.cpu_clk_domain, **_get_cache_opts("l2", options)
         )
@@ -146,6 +156,7 @@ def config_cache(options, system):
         if options.caches:
             icache = icache_class(**_get_cache_opts("l1i", options))
             dcache = dcache_class(**_get_cache_opts("l1d", options))
+            l2c = l2_cache_class(clk_domain=system.cpu_clk_domain, **_get_cache_opts("l2", options))
 
             # If we are using ISA.X86 or ISA.RISCV, we set walker caches.
             if ObjectList.cpu_list.get_isa(options.cpu_type) in [
@@ -175,9 +186,14 @@ def config_cache(options, system):
 
             # When connecting the caches, the clock is also inherited
             # from the CPU in question
-            system.cpu[i].addPrivateSplitL1Caches(
-                icache, dcache, iwalkcache, dwalkcache
-            )
+            if options.l3cache:
+                system.cpu[i].addTwoLevelCacheHierarchy(
+                    icache, dcache, l2c, iwalkcache, dwalkcache
+                )
+            else :
+                system.cpu[i].addPrivateSplitL1Caches(
+                    icache, dcache, iwalkcache, dwalkcache
+                )
 
             if options.memchecker:
                 # The mem_side ports of the caches haven't been connected yet.
@@ -209,7 +225,13 @@ def config_cache(options, system):
                 )
 
         system.cpu[i].createInterruptController()
-        if options.l2cache:
+        if options.l3cache:
+            system.cpu[i].connectAllPorts(
+                system.tol3bus.cpu_side_ports,
+                system.membus.cpu_side_ports,
+                system.membus.mem_side_ports,
+            )
+        elif options.l2cache:
             system.cpu[i].connectAllPorts(
                 system.tol2bus.cpu_side_ports,
                 system.membus.cpu_side_ports,
diff --git a/configs/common/Caches.py b/configs/common/Caches.py
index 7de317f489..24459acff9 100644
--- a/configs/common/Caches.py
+++ b/configs/common/Caches.py
@@ -78,6 +78,17 @@ class L2Cache(Cache):
     write_buffers = 8
 
 
+class L3Cache(Cache):
+    assoc = 16
+    tag_latency = 20
+    data_latency = 20
+    response_latency = 20
+    mshrs = 512
+    tgts_per_mshr = 20
+    write_buffers = 256
+
+
+
 class IOCache(Cache):
     assoc = 8
     tag_latency = 50
diff --git a/configs/common/Options.py b/configs/common/Options.py
index d57dad3a07..410f499739 100644
--- a/configs/common/Options.py
+++ b/configs/common/Options.py
@@ -185,6 +185,7 @@ def addNoISAOptions(parser):
     )
     parser.add_argument("--caches", action="store_true")
     parser.add_argument("--l2cache", action="store_true")
+    parser.add_argument("--l3cache", action="store_true")
     parser.add_argument("--num-dirs", type=int, default=1)
     parser.add_argument("--num-l2caches", type=int, default=1)
     parser.add_argument("--num-l3caches", type=int, default=1)
