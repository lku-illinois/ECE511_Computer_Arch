/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   build_tools/sim_object_param_struct_hh.py:233
 */

#ifndef __PARAMS__RiscvBootloaderKernelWorkload__
#define __PARAMS__RiscvBootloaderKernelWorkload__

namespace gem5 {
namespace RiscvISA {
class BootloaderKernelWorkload;
} // namespace RiscvISA
} // namespace gem5
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <cstddef>
#include <cstddef>
#include "base/types.hh"
#include <cstddef>
#include <string>
#include <cstddef>
#include "enums/KernelPanicOopsBehaviour.hh"
#include <cstddef>
#include "enums/KernelPanicOopsBehaviour.hh"
#include <cstddef>
#include "params/RiscvSemihosting.hh"

#include "params/Workload.hh"

#include "enums/KernelPanicOopsBehaviour.hh"

#include "enums/KernelPanicOopsBehaviour.hh"

namespace gem5
{
struct RiscvBootloaderKernelWorkloadParams
    : public WorkloadParams
{
    gem5::RiscvISA::BootloaderKernelWorkload * create() const;
    Addr bootloader_addr;
    std::string bootloader_filename;
    std::string command_line;
    Addr dtb_addr;
    std::string dtb_filename;
    Addr entry_point;
    bool exit_on_kernel_oops;
    bool exit_on_kernel_panic;
    Addr kernel_addr;
    std::string object_file;
    KernelPanicOopsBehaviour on_oops;
    KernelPanicOopsBehaviour on_panic;
    gem5::RiscvSemihosting * semihosting;
};

} // namespace gem5

#endif // __PARAMS__RiscvBootloaderKernelWorkload__
