/**
 * DO NOT EDIT THIS FILE!
 * File automatically generated by
 *   /home/leonkuabc/gem5/src/mem/slicc/symbols/Type.py:830
 */

#ifndef __MESI_Two_Level_Directory_Event_HH__
#define __MESI_Two_Level_Directory_Event_HH__

#include <iostream>
#include <string>

namespace gem5
{

namespace ruby
{


namespace MESI_Two_Level
{

// Class definition
/** \enum Directory_Event
 *  \brief Directory events
 */
enum Directory_Event {
    Directory_Event_FIRST,
    Directory_Event_Fetch = Directory_Event_FIRST, /**< A memory fetch arrives */
    Directory_Event_Data, /**< writeback data arrives */
    Directory_Event_Memory_Data, /**< Fetched data from memory arrives */
    Directory_Event_Memory_Ack, /**< Writeback Ack from memory arrives */
    Directory_Event_DMA_READ, /**< A DMA Read memory request */
    Directory_Event_DMA_WRITE, /**< A DMA Write memory request */
    Directory_Event_CleanReplacement, /**< Clean Replacement in L2 cache */
    Directory_Event_NUM
};

// Code to convert from a string to the enumeration
Directory_Event string_to_Directory_Event(const ::std::string& str);

// Code to convert state to a string
::std::string Directory_Event_to_string(const Directory_Event& obj);

// Code to increment an enumeration type
Directory_Event &operator++(Directory_Event &e);

::std::ostream&
operator<<(::std::ostream& out, const Directory_Event& obj);

} // namespace MESI_Two_Level
} // namespace ruby
} // namespace gem5
#endif // __MESI_Two_Level_Directory_Event_HH__
